name: build-and-test-windows
on: ["push", "pull_request"]
jobs:
  build-and-test:
    name: build and test on windows
    runs-on: windows-latest
    env:
      LLVM_SYS_120_PREFIX: "C:/LLVM"
      KCLVM_CLANG: "C:/LLVM/bin/clang.exe"
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          submodules: "true"
      
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Install kpm
        run: go install kcl-lang.io/kpm@latest

      - uses: ilammy/msvc-dev-cmd@v1

      - run: clang --version
      - run: cargo --version

      # Install LLVM-12
      - run: Invoke-WebRequest -Uri https://github.com/kcl-lang/llvm-package-windows/releases/download/v12.0.1/LLVM-12.0.1-win64.7z -OutFile C:/LLVM-12.0.1-win64.7z
      - run: Get-FileHash -Algorithm MD5 C:/LLVM-12.0.1-win64.7z # md5: 3fcf77f82c6c3ee650711439b20aebe5
      - run: 7z x -y C:/LLVM-12.0.1-win64.7z -o"C:/LLVM"
      - run: Remove-Item C:/LLVM-12.0.1-win64.7z

      - run: echo "C:/LLVM/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # Build kclvm-cli
      - run: .\scripts\build-windows\build.bat

      # Set kclvm-cli path
      - run: echo ";$(pwd)\scripts\build-windows\_output\kclvm-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        working-directory: .

      # Rust unit test
      - run: argo test --package kclvm-api --lib -- capi_test::test_c_api_validate_code --exact --nocapture 
        working-directory: ./kclvm

      # Rust runtime test
      - run: python3 -m pip install --upgrade pip && python3 -m pip install pytest && kclvm -m pytest -vv
        working-directory: ./kclvm/tests/test_units
      
      - uses: actions/upload-artifact@v3
        with:
          name: kcl-windows
          path: scripts/build-windows/_output/kclvm-windows
